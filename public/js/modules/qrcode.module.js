"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkbag_of_onions"] = self["webpackChunkbag_of_onions"] || []).push([["qrcode"],{

/***/ "./src/js/modules/qrcode.js":
/*!**********************************!*\
  !*** ./src/js/modules/qrcode.js ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var qrcodejs2__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! qrcodejs2 */ \"./node_modules/qrcodejs2/qrcode.js\");\n/* harmony import */ var qrcodejs2__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(qrcodejs2__WEBPACK_IMPORTED_MODULE_0__);\n\n\n// Variables\nvar qrCodeForm = document.querySelector(\".qrcode__form\");\nvar qrCodeBox = document.querySelector(\".qrcode__qr-box\");\nvar urlInput = document.querySelector(\".qrcode__url-input\");\nvar darkColorInput = document.querySelector(\".qrcode__dark-colour-input\");\nvar lightColorInput = document.querySelector(\".qrcode__light-colour-input\");\nvar toggleLogo = document.querySelector(\".qrcode__toggle-logo\");\nvar exportModal = document.querySelector(\".qrcode__modal\");\nvar openExportModal = document.querySelector(\".qrcode__export-qr-code\");\nvar closeExportModal = document.querySelector(\".qrcode__modal-close\");\nvar saveQRCode = document.querySelector(\".qrcode__save-button\");\nvar fileTypeInput = document.querySelector(\".qrcode__file-type\");\nvar qrSizeInput = document.querySelector(\".qrcode__size\");\n\n// Initialize the QRCode object\nvar qrcode = new (qrcodejs2__WEBPACK_IMPORTED_MODULE_0___default())(qrCodeBox, {\n  text: \"\",\n  width: 150,\n  height: 150,\n  colorDark: \"#1ed2d2\",\n  colorLight: \"#00fe00\",\n  correctLevel: (qrcodejs2__WEBPACK_IMPORTED_MODULE_0___default().CorrectLevel).H\n});\nfunction generateQRCode(url, darkColor, lightColor) {\n  qrcode.clear();\n  qrcode._htOption.colorDark = darkColor;\n  qrcode._htOption.colorLight = lightColor;\n  qrcode.makeCode(url);\n}\nfunction isValidURL(url) {\n  var urlPattern = new RegExp(\"^(https?:\\\\/\\\\/)?\" +\n  // protocol\n  \"((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.?)+[a-z]{2,}|((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))\" +\n  // domain name and extension\n  \"(\\\\:\\\\d+)?(\\\\/[-a-z\\\\d%_.~+]*)*\" +\n  // port and path\n  \"(\\\\?[;&a-z\\\\d%_.~+=-]*)?\" +\n  // query string\n  \"(\\\\#[-a-z\\\\d_]*)?$\", \"i\" // fragment locator\n  );\n  return !!urlPattern.test(url);\n}\nfunction handleFormUpdate() {\n  var url = urlInput.value;\n  var darkColor = darkColorInput.value;\n  var lightColor = lightColorInput.value;\n  if (isValidURL(url)) {\n    generateQRCode(url, darkColor, lightColor);\n    if (!qrCodeBox.classList.contains(\"active\")) {\n      qrCodeBox.classList.add(\"active\");\n    }\n    urlInput.setCustomValidity(\"\");\n  } else {\n    console.log(\"Invalid URL\");\n    urlInput.setCustomValidity(\"Please enter a valid URL\");\n    urlInput.reportValidity();\n    if (qrCodeBox.classList.contains(\"active\")) {\n      qrCodeBox.classList.remove(\"active\");\n    }\n  }\n}\nfunction handleToggleLogo() {\n  toggleLogo.checked ? qrCodeBox.classList.add(\"show-logo\") : qrCodeBox.classList.remove(\"show-logo\");\n}\nfunction handleToggleModal(event) {\n  event.preventDefault();\n  if (!exportModal.classList.contains(\"active\")) {\n    exportModal.classList.add(\"active\");\n  } else {\n    exportModal.classList.remove(\"active\");\n  }\n}\nfunction handleSaveQRCode(event) {\n  event.preventDefault();\n  var fileType = fileTypeInput.value;\n  var qrSize = qrSizeInput.value;\n  var image = qrCodeBox.querySelector(\"img\");\n  if (image) {\n    var canvas = document.createElement(\"canvas\");\n    canvas.width = qrSize;\n    canvas.height = qrSize;\n    var context = canvas.getContext(\"2d\");\n    var imgElement = new Image();\n    imgElement.src = image.src;\n    imgElement.onload = function () {\n      context.drawImage(imgElement, 0, 0, qrSize, qrSize);\n      if (qrCodeBox.classList.contains(\"show-logo\")) {\n        var logoImgElement = new Image();\n        logoImgElement.src = \"data:image/svg+xml,<svg xmlns=%22http://www.w3.org/2000/svg%22 viewBox=%220 0 100 100%22><text y=%22.9em%22 font-size=%2290%22>ðŸ§…</text></svg>\";\n        logoImgElement.onload = function () {\n          var logoSize = qrSize / 3;\n          var logoXY = (qrSize - logoSize) / 2;\n          context.drawImage(logoImgElement, logoXY, logoXY, logoSize, logoSize);\n          canvas.toBlob(function (blob) {\n            var link = document.createElement(\"a\");\n            link.href = URL.createObjectURL(blob);\n            link.download = \"onion_qrcode.\".concat(fileType);\n            link.click();\n          }, \"image/\".concat(fileType));\n        };\n      } else {\n        canvas.toBlob(function (blob) {\n          var link = document.createElement(\"a\");\n          link.href = URL.createObjectURL(blob);\n          link.download = \"onion_qrcode.\".concat(fileType);\n          link.click();\n        }, \"image/\".concat(fileType));\n      }\n    };\n  }\n}\nurlInput.addEventListener(\"input\", handleFormUpdate);\ndarkColorInput.addEventListener(\"input\", handleFormUpdate);\nlightColorInput.addEventListener(\"input\", handleFormUpdate);\ntoggleLogo.addEventListener(\"change\", handleToggleLogo);\nopenExportModal.addEventListener(\"click\", handleToggleModal);\ncloseExportModal.addEventListener(\"click\", handleToggleModal);\nsaveQRCode.addEventListener(\"click\", handleSaveQRCode);\n\n//# sourceURL=webpack://bag-of-onions/./src/js/modules/qrcode.js?");

/***/ })

}]);